{"ast":null,"code":"import musicLibrary from \"../Components/MusicLibrary\";\n\nconst songReducer = (state = musicLibrary, action) => {\n  let prevSongs = {\n    musicLibrary: []\n  };\n\n  switch (action.type) {\n    case 'ADDMUSIC':\n      return {\n        musicLibrary: [...state.musicLibrary].concat(action.payload)\n      };\n\n    case 'DELETEMUSIC':\n      const filteredSongs = state.musicLibrary.filter((item, index) => index !== action.payload);\n      return {\n        musicLibrary: filteredSongs\n      };\n\n    case 'SORTMUSIC':\n      let sortedSongs = state.musicLibrary.sort((item1, item2) => {\n        if (item1[action.payload.fieldName].toLowerCase() > item2[action.payload.fieldName].toLowerCase()) {\n          return 1;\n        }\n\n        if (item1.song < item2.song) {\n          return -1;\n        } else return 0;\n      });\n      action.payload.reverse && sortedSongs.reverse();\n      return {\n        musicLibrary: sortedSongs\n      };\n\n    case 'FILTERMUSIC':\n      if (prevSongs.musicLibrary.length === 0) {\n        prevSongs = state;\n      }\n\n      let filterTempSongs = [...prevSongs.musicLibrary];\n      const filterSongs = filterTempSongs.filter(item => {\n        if (action.payload.genre && action.payload.rating) {\n          return item.genre === action.payload.genre && item.rating === action.payload.rating;\n        }\n\n        if (action.payload.genre && !action.payload.rating) {\n          return item.genre === action.payload.genre;\n        }\n\n        if (!action.payload.genre && action.payload.rating) {\n          return item.rating === action.payload.rating;\n        }\n\n        return item;\n      });\n      return {\n        musicLibrary: filterSongs\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default songReducer;","map":{"version":3,"sources":["C:/Users/ralf2/Desktop/Winc_Academy/Eindopdrachten/4_react_lil_playlist/lil_playlist/src/Reducers/songReducer.js"],"names":["musicLibrary","songReducer","state","action","prevSongs","type","concat","payload","filteredSongs","filter","item","index","sortedSongs","sort","item1","item2","fieldName","toLowerCase","song","reverse","length","filterTempSongs","filterSongs","genre","rating"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACF,YAAP,EAAqBG,MAArB,KAAgC;AAChD,MAAIC,SAAS,GAAG;AAACJ,IAAAA,YAAY,EAAE;AAAf,GAAhB;;AACA,UAAOG,MAAM,CAACE,IAAd;AACI,SAAK,UAAL;AACI,aAAO;AAACL,QAAAA,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAV,EAAwBM,MAAxB,CAA+BH,MAAM,CAACI,OAAtC;AAAf,OAAP;;AACJ,SAAK,aAAL;AACI,YAAMC,aAAa,GAAGN,KAAK,CAACF,YAAN,CAAmBS,MAAnB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKR,MAAM,CAACI,OAA5D,CAAtB;AACA,aAAO;AAACP,QAAAA,YAAY,EAAEQ;AAAf,OAAP;;AACJ,SAAK,WAAL;AACI,UAAII,WAAW,GAAGV,KAAK,CAACF,YAAN,CAAmBa,IAAnB,CAAwB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5D,YAAID,KAAK,CAACX,MAAM,CAACI,OAAP,CAAeS,SAAhB,CAAL,CAAgCC,WAAhC,KAA8CF,KAAK,CAACZ,MAAM,CAACI,OAAP,CAAeS,SAAhB,CAAL,CAAgCC,WAAhC,EAAlD,EAAgG;AAC5F,iBAAO,CAAP;AACH;;AACD,YAAIH,KAAK,CAACI,IAAN,GAAWH,KAAK,CAACG,IAArB,EAA0B;AACtB,iBAAO,CAAC,CAAR;AACH,SAFD,MAGK,OAAO,CAAP;AACJ,OARiB,CAAlB;AASAf,MAAAA,MAAM,CAACI,OAAP,CAAeY,OAAf,IAA0BP,WAAW,CAACO,OAAZ,EAA1B;AACA,aAAO;AAACnB,QAAAA,YAAY,EAAEY;AAAf,OAAP;;AACJ,SAAK,aAAL;AACI,UAAIR,SAAS,CAACJ,YAAV,CAAuBoB,MAAvB,KAAkC,CAAtC,EAAwC;AACpChB,QAAAA,SAAS,GAAGF,KAAZ;AACH;;AACD,UAAImB,eAAe,GAAG,CAAC,GAAGjB,SAAS,CAACJ,YAAd,CAAtB;AACA,YAAMsB,WAAW,GAAGD,eAAe,CAACZ,MAAhB,CAAuBC,IAAI,IAAI;AAC/C,YAAIP,MAAM,CAACI,OAAP,CAAegB,KAAf,IAAwBpB,MAAM,CAACI,OAAP,CAAeiB,MAA3C,EAAkD;AAC9C,iBAAOd,IAAI,CAACa,KAAL,KAAepB,MAAM,CAACI,OAAP,CAAegB,KAA9B,IAAuCb,IAAI,CAACc,MAAL,KAAgBrB,MAAM,CAACI,OAAP,CAAeiB,MAA7E;AACH;;AACD,YAAIrB,MAAM,CAACI,OAAP,CAAegB,KAAf,IAAwB,CAACpB,MAAM,CAACI,OAAP,CAAeiB,MAA5C,EAAmD;AAC/C,iBAAOd,IAAI,CAACa,KAAL,KAAepB,MAAM,CAACI,OAAP,CAAegB,KAArC;AACH;;AACD,YAAI,CAACpB,MAAM,CAACI,OAAP,CAAegB,KAAhB,IAAyBpB,MAAM,CAACI,OAAP,CAAeiB,MAA5C,EAAmD;AAC/C,iBAAOd,IAAI,CAACc,MAAL,KAAgBrB,MAAM,CAACI,OAAP,CAAeiB,MAAtC;AACH;;AACD,eAAOd,IAAP;AACH,OAXmB,CAApB;AAYA,aAAO;AAACV,QAAAA,YAAY,EAAEsB;AAAf,OAAP;;AACJ;AAAS,aAAOpB,KAAP;AApCb;AAsCH,CAxCD;;AA0CA,eAAeD,WAAf","sourcesContent":["import musicLibrary from \"../Components/MusicLibrary\"\r\n\r\nconst songReducer = (state=musicLibrary, action) => {\r\n    let prevSongs = {musicLibrary: []}\r\n    switch(action.type){\r\n        case 'ADDMUSIC':\r\n            return {musicLibrary: [...state.musicLibrary].concat(action.payload)}\r\n        case 'DELETEMUSIC':\r\n            const filteredSongs = state.musicLibrary.filter((item, index) => index !== action.payload)\r\n            return {musicLibrary: filteredSongs}\r\n        case 'SORTMUSIC':\r\n            let sortedSongs = state.musicLibrary.sort((item1, item2) => {\r\n            if (item1[action.payload.fieldName].toLowerCase()>item2[action.payload.fieldName].toLowerCase()){\r\n                return 1\r\n            }\r\n            if (item1.song<item2.song){\r\n                return -1\r\n            }\r\n            else return 0\r\n            })\r\n            action.payload.reverse && sortedSongs.reverse()\r\n            return {musicLibrary: sortedSongs}\r\n        case 'FILTERMUSIC':\r\n            if (prevSongs.musicLibrary.length === 0){\r\n                prevSongs = state\r\n            }\r\n            let filterTempSongs = [...prevSongs.musicLibrary]\r\n            const filterSongs = filterTempSongs.filter(item => {\r\n                if (action.payload.genre && action.payload.rating){\r\n                    return item.genre === action.payload.genre && item.rating === action.payload.rating\r\n                }\r\n                if (action.payload.genre && !action.payload.rating){\r\n                    return item.genre === action.payload.genre\r\n                }\r\n                if (!action.payload.genre && action.payload.rating){\r\n                    return item.rating === action.payload.rating\r\n                }\r\n                return item\r\n            })\r\n            return {musicLibrary: filterSongs}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default songReducer;"]},"metadata":{},"sourceType":"module"}