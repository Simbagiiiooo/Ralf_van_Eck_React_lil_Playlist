{"ast":null,"code":"const songs = {\n  allSongs: [{\n    song: 'Dat ik je zo zou missen',\n    artist: 'Tino Martin',\n    genre: 'Dutch',\n    rating: '5'\n  }, {\n    song: 'Adagio For Strings',\n    artist: 'Tiesto',\n    genre: 'Techno',\n    rating: '4'\n  }, {\n    song: 'Adagio',\n    artist: 'Hauser',\n    genre: 'Classic',\n    rating: '4'\n  }, {\n    song: 'Mooi',\n    artist: 'Marco Borsato',\n    genre: 'Dutch',\n    rating: '4'\n  }, {\n    song: 'Leef',\n    artist: 'André Hazes',\n    genre: 'Dutch',\n    rating: '3'\n  }, {\n    song: 'Historia de un Amor',\n    artist: 'Hauser',\n    genre: 'Classic',\n    rating: '2'\n  }, {\n    song: 'Acid Is The Answer',\n    artist: 'Klanglos',\n    genre: 'Acid Techno',\n    rating: '4'\n  }, {\n    song: 'Hardcore Vibes',\n    artist: 'Dune',\n    genre: 'Happy Hardcore',\n    rating: '3'\n  }, {\n    song: 'Sensemilla',\n    artist: 'Yellowman',\n    genre: 'Reggae',\n    rating: '2'\n  }, {\n    song: 'Adagio for Strings',\n    artist: 'Hauser',\n    genre: 'Classic',\n    rating: '4'\n  }, {\n    song: 'Brabant',\n    artist: 'Guus Meeuwis',\n    genre: 'Dutch',\n    rating: '5'\n  }, {\n    song: 'Acid Phase',\n    artist: 'Emmanuel Top',\n    genre: 'Acid Techno',\n    rating: '5'\n  }, {\n    song: 'No Woman, No Cry',\n    artist: 'Bob Marley',\n    genre: 'Reggae',\n    rating: '5'\n  }, {\n    song: 'Mijn Jongen',\n    artist: 'Sander Kwarten',\n    genre: 'Dutch',\n    rating: '4'\n  }, {\n    song: 'True To Myself',\n    artist: 'Ziggy Marley',\n    genre: 'Reggae',\n    rating: '1'\n  }]\n};\nlet prevSongs = {\n  allSongs: []\n};\n\nconst songReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADDSONG':\n      return {\n        allSongs: [...state.allSongs].concat(action.payload)\n      };\n\n    case 'DELETESONG':\n      const filteredSongs = state.allSongs.filter((item, index) => index !== action.payload);\n      return {\n        allSongs: filteredSongs\n      };\n\n    case 'SORTSONGS':\n      let sortedSongs = state.allSongs.sort((item1, item2) => {\n        if (item1[action.payload.fieldName].toLowerCase() > item2[action.payload.fieldName].toLowerCase()) {\n          return 1;\n        }\n\n        if (item1.song < item2.song) {\n          return -1;\n        } else return 0;\n      });\n      action.payload.reverse && sortedSongs.reverse();\n      return {\n        allSongs: sortedSongs\n      };\n\n    case 'FILTERSONG':\n      if (prevSongs.allSongs.length === 0) {\n        prevSongs = state;\n      }\n\n      let filterTempSongs = [...prevSongs.allSongs];\n      const filterSongs = filterTempSongs.filter(item => {\n        if (action.payload.genre && action.payload.rating) {\n          return item.genre === action.payload.genre && item.rating === action.payload.rating;\n        }\n\n        if (action.payload.genre && !action.payload.rating) {\n          return item.genre === action.payload.genre;\n        }\n\n        if (!action.payload.genre && action.payload.rating) {\n          return item.rating === action.payload.rating;\n        }\n\n        return item;\n      });\n      return {\n        allSongs: filterSongs\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default songReducer;","map":{"version":3,"sources":["C:/Users/ralf2/Desktop/Winc_Academy/Eindopdrachten/4_react_lil_playlist/lil_playlist/src/Reducers/songReducer.js"],"names":["songs","allSongs","song","artist","genre","rating","prevSongs","songReducer","state","initialState","action","type","concat","payload","filteredSongs","filter","item","index","sortedSongs","sort","item1","item2","fieldName","toLowerCase","reverse","length","filterTempSongs","filterSongs"],"mappings":"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","sourcesContent":["const songs = {\r\n    allSongs: [\r\n        {\r\n            song: 'Dat ik je zo zou missen',\r\n            artist: 'Tino Martin',\r\n            genre: 'Dutch',\r\n            rating: '5'\r\n        },\r\n        {\r\n            song: 'Adagio For Strings',\r\n            artist: 'Tiesto',\r\n            genre: 'Techno',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'Adagio',\r\n            artist: 'Hauser',\r\n            genre: 'Classic',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'Mooi',\r\n            artist: 'Marco Borsato',\r\n            genre: 'Dutch',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'Leef',\r\n            artist: 'André Hazes',\r\n            genre: 'Dutch',\r\n            rating: '3'\r\n        },\r\n        {\r\n            song: 'Historia de un Amor',\r\n            artist: 'Hauser',\r\n            genre: 'Classic',\r\n            rating: '2'\r\n        },\r\n        {\r\n            song: 'Acid Is The Answer',\r\n            artist: 'Klanglos',\r\n            genre: 'Acid Techno',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'Hardcore Vibes',\r\n            artist: 'Dune',\r\n            genre: 'Happy Hardcore',\r\n            rating: '3'\r\n        },\r\n        {\r\n            song: 'Sensemilla',\r\n            artist: 'Yellowman',\r\n            genre: 'Reggae',\r\n            rating: '2'\r\n        },\r\n        {\r\n            song: 'Adagio for Strings',\r\n            artist: 'Hauser',\r\n            genre: 'Classic',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'Brabant',\r\n            artist: 'Guus Meeuwis',\r\n            genre: 'Dutch',\r\n            rating: '5'\r\n        },\r\n        {\r\n            song: 'Acid Phase',\r\n            artist: 'Emmanuel Top',\r\n            genre: 'Acid Techno',\r\n            rating: '5'\r\n        },\r\n        {\r\n            song: 'No Woman, No Cry',\r\n            artist: 'Bob Marley',\r\n            genre: 'Reggae',\r\n            rating: '5'\r\n        },\r\n        {\r\n            song: 'Mijn Jongen',\r\n            artist: 'Sander Kwarten',\r\n            genre: 'Dutch',\r\n            rating: '4'\r\n        },\r\n        {\r\n            song: 'True To Myself',\r\n            artist: 'Ziggy Marley',\r\n            genre: 'Reggae',\r\n            rating: '1'\r\n        },\r\n    ]\r\n}\r\n\r\nlet prevSongs = {allSongs: []}\r\n\r\nconst songReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case 'ADDSONG':\r\n            return {allSongs: [...state.allSongs].concat(action.payload)}\r\n        case 'DELETESONG':\r\n            const filteredSongs = state.allSongs.filter((item, index) => index !== action.payload)\r\n            return {allSongs: filteredSongs}\r\n        case 'SORTSONGS':\r\n            let sortedSongs = state.allSongs.sort((item1, item2) => {\r\n            if (item1[action.payload.fieldName].toLowerCase()>item2[action.payload.fieldName].toLowerCase()){\r\n                return 1\r\n            }\r\n            if (item1.song<item2.song){\r\n                return -1\r\n            }\r\n            else return 0\r\n            })\r\n            action.payload.reverse && sortedSongs.reverse()\r\n            return {allSongs: sortedSongs}\r\n        case 'FILTERSONG':\r\n            if (prevSongs.allSongs.length === 0){\r\n                prevSongs = state\r\n            }\r\n            let filterTempSongs = [...prevSongs.allSongs]\r\n            const filterSongs = filterTempSongs.filter(item => {\r\n                if (action.payload.genre && action.payload.rating){\r\n                    return item.genre === action.payload.genre && item.rating === action.payload.rating\r\n                }\r\n                if (action.payload.genre && !action.payload.rating){\r\n                    return item.genre === action.payload.genre\r\n                }\r\n                if (!action.payload.genre && action.payload.rating){\r\n                    return item.rating === action.payload.rating\r\n                }\r\n                return item\r\n            })\r\n            return {allSongs: filterSongs}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default songReducer;"]},"metadata":{},"sourceType":"module"}